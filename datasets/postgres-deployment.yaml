apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  namespace: job-app
  labels:
    app: postgres             # Label for selecting pods
spec:
  replicas: 1                 # Run a single instance of PostgreSQL
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres         # Pod label, must match selector
    spec:
      containers:
      - name: postgres
        # Use the custom image you built and pushed
        image: europe-west1-docker.pkg.dev/projectcloud-451415/cloudapiservice/postgres-with-data:latest
        imagePullPolicy: Always # Or IfNotPresent after testing
        ports:
        - containerPort: 5432   # Standard PostgreSQL port
          name: pgport
        env:
          # Set PostgreSQL environment variables using the Secret
          - name: POSTGRES_DB
            valueFrom:
              secretKeyRef:
                name: postgres-db-credentials # Secret name
                key: database                # Key within the Secret
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: postgres-db-credentials
                key: username
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgres-db-credentials
                key: password
          # Set the data directory (PostgreSQL standard)
          - name: PGDATA
            value: /var/lib/postgresql/data/pgdata
        volumeMounts:
        - name: postgres-storage    # Mount point name
          mountPath: /var/lib/postgresql/data # Mount the PVC here
        resources: # Adjust resources as needed
           requests:
             memory: "256Mi"
             cpu: "250m" # 0.25 CPU cores
           limits:
             memory: "512Mi"
             cpu: "500m" # 0.5 CPU cores
        # Basic Liveness/Readiness Probes for PostgreSQL
        livenessProbe:
          tcpSocket:
            port: pgport
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command: ["pg_isready", "-U", "$(POSTGRES_USER)", "-d", "$(POSTGRES_DB)", "-h", "127.0.0.1", "-p", "5432"]
          initialDelaySeconds: 5
          periodSeconds: 10
          # Note: pg_isready requires the client binaries, included in the official postgres image
          # Requires POSTGRES_USER and POSTGRES_DB env vars to be set (which they are)
      volumes:
      - name: postgres-storage      # Volume definition name
        persistentVolumeClaim:
          claimName: postgres-pvc   # Reference the PVC created earlier